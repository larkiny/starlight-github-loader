/**
 * Comprehensive TypeScript interface for Starlight frontmatter properties
 * Based on: https://starlight.astro.build/reference/frontmatter/
 */

export interface StarlightHeroAction {
  text: string;
  link: string;
  variant?: 'primary' | 'secondary' | 'minimal';
  icon?: string;
}

export interface StarlightHeroImage {
  /** Path to image file */
  file?: string;
  /** Alt text for accessibility */
  alt?: string;
  /** Raw HTML string for custom image markup */
  html?: string;
}

export interface StarlightHero {
  title?: string;
  tagline?: string;
  image?: StarlightHeroImage;
  actions?: StarlightHeroAction[];
}

export interface StarlightBanner {
  content: string;
}

export interface StarlightSidebarBadge {
  text: string;
  variant?: 'note' | 'tip' | 'caution' | 'danger';
}

export interface StarlightSidebar {
  /** Custom label for sidebar link */
  label?: string;
  /** Sorting order in autogenerated groups */
  order?: number;
  /** Hide page from autogenerated sidebar groups */
  hidden?: boolean;
  /** Add a badge to the sidebar link */
  badge?: string | StarlightSidebarBadge;
  /** Custom HTML attributes for the sidebar link */
  attrs?: Record<string, string>;
}

export interface StarlightTableOfContents {
  /** Minimum heading level to show (default: 2) */
  minHeadingLevel?: number;
  /** Maximum heading level to show (default: 3) */
  maxHeadingLevel?: number;
}

export interface StarlightNavigationLink {
  link: string;
  label: string;
}

export interface StarlightHeadTag {
  tag: string;
  attrs?: Record<string, string>;
  content?: string;
}

/**
 * Complete Starlight frontmatter interface
 * Supports all documented properties with proper TypeScript types
 */
export interface StarlightFrontmatter {
  // Required
  /** Page title (required) - displayed in browser tabs and page metadata */
  title: string;

  // Optional metadata
  /** Page description for SEO and search engines */
  description?: string;
  /** Override the default page URL slug */
  slug?: string;
  /** Customize or disable the "Edit page" link */
  editUrl?: string | boolean;
  /** Override the last updated timestamp */
  lastUpdated?: Date | boolean;
  /** Control whether page appears in search results (default: true) */
  pagefind?: boolean;
  /** Mark page as draft - excluded from production builds (default: false) */
  draft?: boolean;

  // Layout and structure
  /** Page template type */
  template?: 'doc' | 'splash';
  /** Configure table of contents behavior */
  tableOfContents?: boolean | StarlightTableOfContents;

  // Navigation
  /** Customize previous page link */
  prev?: boolean | string | StarlightNavigationLink;
  /** Customize next page link */
  next?: boolean | string | StarlightNavigationLink;

  // Sidebar customization
  sidebar?: StarlightSidebar;

  // Visual elements
  /** Hero section configuration (typically for splash pages) */
  hero?: StarlightHero;
  /** Announcement banner */
  banner?: StarlightBanner;

  // Custom head elements
  /** Add custom HTML tags to page head */
  head?: StarlightHeadTag[];

  // Allow custom properties for extensibility
  [key: string]: unknown;
}

/**
 * Options for configuring frontmatter transformations
 */
export interface FrontmatterTransformOptions {
  /** Frontmatter properties to apply */
  frontmatter: Partial<StarlightFrontmatter>;
  /** How to handle existing frontmatter */
  mode?: 'add' | 'merge' | 'replace';
  /** Whether to preserve existing properties when merging */
  preserveExisting?: boolean;
}

/**
 * Supported YAML frontmatter formats
 */
export type YamlValue = string | number | boolean | Date | null | YamlValue[] | { [key: string]: YamlValue };

/**
 * Parsed frontmatter result
 */
export interface ParsedFrontmatter {
  /** Parsed frontmatter data */
  data: Record<string, YamlValue>;
  /** Remaining content after frontmatter */
  content: string;
  /** Whether frontmatter was found */
  hasFrontmatter: boolean;
}